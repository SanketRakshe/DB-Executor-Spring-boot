## Create Table
#Q1=CREATE TABLE IF NOT EXISTS employee (id INT PRIMARY KEY, name VARCHAR(255), salary DECIMAL(15,2));
#
## Insert Data
#Q2=INSERT INTO employee (id, name, salary) VALUES (1, 'John Doe', 50000.00);
#
## Select Data
#Q3=SELECT * FROM employee;
#
## Update Data
#Q4=UPDATE employee SET salary = 55000.00 WHERE id = 1;
#
## Delete Data
#Q5=DELETE FROM employee WHERE id = 1;
#
#Q6=SELECT name FROM employee WHERE salary > 50000.00;
#
#
#
#Q7=CREATE TABLE Students ( StudentID INT PRIMARY KEY, Name VARCHAR(50), Age INT);
#
#Q8=CREATE TABLE Subjects ( SubjectID INT PRIMARY KEY, SubjectName VARCHAR(50), StudentID INT);
#  
#Q9=INSERT INTO Students (StudentID, Name, Age) VALUES (1, 'John', 20), (2, 'Emily', 22), (3, 'Sophia', 21), (4, 'Michael', 23);
#
#Q10=INSERT INTO Subjects (SubjectID, SubjectName, StudentID) VALUES (101, 'Mathematics', 1), (102, 'Physics', 1), (103, 'Chemistry', 2), (104, 'Biology', 3);
#
#Q11=SELECT s.StudentID, s.Name AS StudentName, sub.SubjectName FROM Students s INNER JOIN Subjects sub ON s.StudentID = sub.StudentID;
#
#Q12=SELECT s.StudentID, s.Name AS StudentName, sub.SubjectName FROM Students s LEFT JOIN Subjects sub ON s.StudentID = sub.StudentID;



# For Mysql --->
# Create Employee Table
Q1=CREATE TABLE IF NOT EXISTS employee (id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255) NOT NULL, salary DECIMAL(15,2) NOT NULL);

## Insert data in employee
Q2=INSERT INTO employee (name, salary) VALUES ('Vrushabh', 10000.00);

## Select Data
Q3=SELECT * FROM employee;

## Update Data
Q4=UPDATE employee SET salary = 55000.00 WHERE id = 4;

## Delete Data
Q5=DELETE FROM employee WHERE id = 4;

## Select data on base of condition
Q6=SELECT name FROM employee WHERE salary > 20000.00;

## join example

Q7=CREATE TABLE Students (StudentID INT PRIMARY KEY AUTO_INCREMENT, Name VARCHAR(50) NOT NULL, Age INT NOT NULL);

Q8=CREATE TABLE Subjects (SubjectID INT PRIMARY KEY AUTO_INCREMENT, SubjectName VARCHAR(50) NOT NULL, StudentID INT NOT NULL, FOREIGN KEY (StudentID) REFERENCES Students(StudentID) ON DELETE CASCADE);

Q9=INSERT INTO Students (Name, Age) VALUES ('John', 20), ('Emily', 22), ('Sophia', 21), ('Michael', 23);

Q10=INSERT INTO Subjects (SubjectName, StudentID) VALUES ('Mathematics', 1), ('Physics', 1), ('Chemistry', 2), ('Biology', 3);

Q11=SELECT s.StudentID, s.Name AS StudentName, sub.SubjectName FROM Students s INNER JOIN Subjects sub ON s.StudentID = sub.StudentID;

Q12=SELECT s.StudentID, s.Name AS StudentName, sub.SubjectName FROM Students s LEFT JOIN Subjects sub ON s.StudentID = sub.StudentID;

Q13=SELECT s.StudentID, s.Name AS StudentName, s.Age, COUNT(sub.SubjectID) AS TotalSubjects, ROUND(AVG(sub.SubjectID), 2) AS AvgSubjectID FROM Students s LEFT JOIN (SELECT SubjectID, SubjectName, StudentID FROM Subjects WHERE SubjectName LIKE '%s%') sub ON s.StudentID = sub.StudentID WHERE s.Age > (SELECT AVG(Age) FROM Students) GROUP BY s.StudentID, s.Name, s.Age HAVING COUNT(sub.SubjectID) >= 1 ORDER BY TotalSubjects DESC;




     


